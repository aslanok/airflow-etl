{"timestamp":"2025-05-04T19:12:16.613572","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-04T19:12:16.614016","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/weatherstack_etl_v2.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-04T19:12:16.653137Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.653322Z","level":"info","event":" Previous state of the Task instance: queued","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.653455Z","level":"info","event":"Current task name:load_weather_to_postgres","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.653540Z","level":"info","event":"Dag name:weatherstack_etl_v2","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.653614Z","level":"info","event":"Connection Established","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.653686Z","level":"info","event":"Query Executed!","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.662503Z","level":"info","event":"Inserted 2 rows into 'weather'","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.666533Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.667502Z","level":"info","event":" Previous state of the Task instance: running","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.669457Z","level":"info","event":"Task operator:<Task(_PythonDecoratedOperator): load_weather_to_postgres>","chan":"stdout","logger":"task"}
{"timestamp":"2025-05-04T19:12:16.663754","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.decorators.python._PythonDecoratedOperator"}
